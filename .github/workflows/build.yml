name: build

on: [push, pull_request]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  basic-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      - run: npm ci
      - run: npm run check-packages

  build-common:
    needs: basic-tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      - run: npm ci
      - run: npm run lint --workspace common
      - run: npm run build --workspace common
      - run: echo "This file is placed at the project root, so Github preserves the artifact paths (see https://github.com/actions/upload-artifact/issues/206)" > root.txt
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: | # Important to use `|` to preserve the path (see https://github.com/actions/upload-artifact/issues/55#issuecomment-633825395)
            common/dist/**
            root.txt
          if-no-files-found: error

  build-app:
    needs: build-common
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        workspace: [ client, server ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: dist
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      - run: npm ci
      - run: npm run lint --workspace ${{ matrix.workspace }}
      - run: npm run build --workspace ${{ matrix.workspace }}
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: |
            ${{ matrix.workspace }}/dist/**
            root.txt
          if-no-files-found: error

  build-portal:
    needs: build-app
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: dist
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      - run: npm ci
      - run: npm run lint --workspace portal
      - run: npm run build --workspace portal
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: |
            ${{ matrix.workspace }}/dist/**
            root.txt
          if-no-files-found: error

  publish:
    if: contains('
        refs/heads/main
        refs/heads/develop
      ', github.ref) && github.repository == 'fumiX/fuBlog'
    needs: build-portal
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: dist
      - run: |
          cp -r server/dist/* docker/app/
          cp -rT server/test-data/ docker/app/test-data/
          cp -rT client/dist/ docker/app/public/
          cp server/package.json docker/app/
          mkdir -p "docker/app/node_modules/@fumix/"
          cp -rT common/ "docker/app/node_modules/@fumix/fu-blog-common"
          cd docker/app/
          npm install
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}-app
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: docker/app
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  publish-db-image:
    if: contains('
        refs/heads/main
        refs/heads/develop
      ', github.ref) && github.repository == 'fumiX/fuBlog'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}-postgres
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: docker/postgres
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
