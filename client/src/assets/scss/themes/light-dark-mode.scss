$themes: (
    darkTheme: (
        "text-color": $body-color,
        "bg-color": $body-bg,
        "link-color": $link-color,
        "card-bg-color": $card-bg,
        "modal-bg-color": $modal-content-bg,
        "modal-content-border-color": $modal-content-border-color,
        "modal-header-border-color": $modal-header-border-color,
        "table-border-color": $table-border-color,
    ),
    lightTheme: (
        "text-color": $body-color-light,
        "bg-color": $body-bg-light,
        "link-color": $link-color,
        "card-bg-color": $card-bg-light,
        "modal-bg-color": $modal-content-bg-light,
        "modal-content-border-color": $modal-content-border-color-light,
        "modal-header-border-color": $modal-header-border-color-light,
        "table-border-color": $table-border-color-light,
    ),
);

@mixin theme() {
    @each $theme, $map in $themes {
        $theme-map: $map !global;
        .#{$theme} & {
            @content;
        }
    }
    $theme-map: null !global;
}

@function theme-get($key) {
    @return map-get($theme-map, $key);
}

.content {
    transition: .75s;
    @include theme() {
        color: theme-get("text-color") !important;
        background-color: theme-get("bg-color") !important;
        a :not(.page-link) {
            color: theme-get("link-color");
        }
        .card {
            background-color: theme-get("card-bg-color");
            transition: .75s;

            .card-body {
                svg {
                    g > * :not(text) {
                        stroke: theme-get("text-color") !important;
                    }
                }
            }
        }
        .modal-content {
            background-color: theme-get("modal-bg-color");
            border-color: theme-get("modal-content-border-color");
        }
        .modal-header,
        .modal-footer {
            border-color: theme-get("modal-header-border-color");
        }
        table {
            &.table-bordered {
                border-color: theme-get("table-border-color")!important;
            }
            th, td {
                color: theme-get("text-color");
            }
        }
    }
}
